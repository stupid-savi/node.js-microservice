name: CI
on:
    # When pull request opens
    pull_request:
        branches:
            - main
    # When pull request merged or directly pushed
    push:
        branches:
            - main
  
# jobs runs on different ocntexts means different machines
jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest
        # if:github.event_name = 'pull_request'
        steps:
            # reusable action like a plugin, checkout to branch on the machine where to run the steps
            - name: Checkout Repository
              uses: actions/checkout@v3
            - name: install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run lint:check
            - name: Run Prettier
              run: npm run format:check
            - name: Test and coverage
              run: npm run test
              env:
                  PORT: ${{secrets.PORT}}
                  SHUTDOWN_WINDOW_TIMEFRAME: ${{secrets.SHUTDOWN_WINDOW_TIMEFRAME}}
                  DB_HOST: ${{secrets.DB_HOST}}
                  DB_PORT: ${{secrets.DB_PORT}}
                  DB_USERNAME: ${{secrets.DB_USERNAME}}
                  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
                  DB_NAME: ${{secrets.DB_NAME}}
                  REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
                  JWKS_URI: ${{secrets.JWKS_URI}}
                  PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
            - name: build-ts
              run: npm run build
            - name: Sonarcloud scan
              uses: SonarSource/sonarcloud-github-action@master  # Prebuilt action for sonar cloud 
              env:
                  SONAR_CLOUD_ACCESS_TOKEN: ${{secrets.SONAR_CLOUD_ACCESS_TOKEN}}
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # Github will inject it automatically
    
    build-and-push-docker-image:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: stupidsavi/auth-service
            IMAGE_TAG: build-${{github.run_number}}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v1
              with:
                    username: ${{secrets.DOCKER_HUB_USERNAME}}
                    password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
            - name: Build Docker Image
              run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} -f docker/prod/Dockerfile .
            - name: Push Docker Image to Dokcer Hub
              run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}



